# for getting all courses
query getAllCourses {
  allCourses: courses {
    id
    name
    description
    status
    photo {
      image {
        publicUrlTransformed
      }
      altText
    }
  }
}

# for getting single course
query getSingleCourse {
  singleCourse: course(where: { id: "ckyj19rls0509kcg6webvjujv" }) {
    id
    name
    description
    status
    photo {
      image {
        publicUrlTransformed
      }
      altText
    }
  }
}

# Get all courses count
query count {
  coursesCount
}

# pass parameters in query variables
query getAllCourses($skip: Int = 0, $take: Int) {
  allCourses: courses(take: $take, skip: $skip) {
    id
    name
    description
    status
    photo {
      image {
        publicUrlTransformed
      }
      altText
    }
  }
}

# Get User
query user {
  authenticatedItem {
    ... on User {
      id
      name
      email
    }
  }
}

# Create User
mutation SignUp {
  createUser(
    data: { name: "Berkin", email: "berkin@example.com", password: "berkin123" }
  ) {
    id
    name
    email
  }
}

# Sign in
mutation Signin {
  authenticateUserWithPassword(email: "berkin@example.com", password: "berkin123") {
    ... on UserAuthenticationWithPasswordSuccess {
      sessionToken
      item {
        name
        email
      }
    }
    ... on UserAuthenticationWithPasswordFailure {
      message
    }
  }
}

mutation Signin {
  authenticateUserWithPassword(email: "berkin@exadasdsample.com", password: "berkin123") {
    ... on UserAuthenticationWithPasswordSuccess {
      sessionToken
      item {
        name
        email
      }
    }
    ... on UserAuthenticationWithPasswordFailure {
      message
    }
  }
}

mutation SignUp($email: String!, $name: String!, $password: String!) {
  createUser(data: { name: $name, email: $email, password: $password }) {
    id
    name
    email
  }
}
# Search

query searchCourse($searchTerm: String!) {
  searchTerms: courses(
    where: {
      OR: [
        { name: { contains: $searchTerm, mode: insensitive } }
        { description: { contains: $searchTerm, mode: insensitive } }
      ]
    }
  ) {
    id
    name
    description
    photo {
      image {
        publicUrlTransformed
      }
    }
  }
}

# Create Course
mutation createCourse(
  $name: String!
  $description: String!
  $status: String!
  $image: Upload
) {
  createCourse(
    data: {
      name: $name
      description: $description
      status: $status
      photo: { create: { image: $image, altText: $name } }
    }
  ) {
    id
    name
    description
    price
  }
}

mutation updateCourse(
  $id: ID!
  $name: String
  $description: String
  $status: String
  $price: Int
) {
  updateCourse(
    where: { id: $id }
    data: { name: $name, description: $description, status: $status, price: $price }
  ) {
    id
    name
    description
    status
    price
  }
}

#--- single response
# singleCourse:
# description: "Dive in and learn React.js from scratch! Learn Reactjs, Hooks, Redux, React Routing, Animations, Next.js and way more!"
# id: "ckyj19rls0509kcg6webvjujv"
# name: "React - The Complete Guide"
# photo: {__typename: 'CourseImage', image: {â€¦}, altText: 'React Course'}
# status: "PUBLISHED"
# __typename: "Course"
